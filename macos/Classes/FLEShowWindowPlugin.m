// Copyright 2018 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

#import "FLEShowWindowPlugin.h"

#import <AppKit/AppKit.h>

// See color_panel.dart for descriptions.
static NSString *const kChannelName = @"inspireui/showwindow";

static NSString *const _kShowWindowMethod = @"Window.Show";
static NSString *const _kPrintLog = @"Window.Log";

@implementation FLEShowWindowPlugin {
  // The channel used to communicate with Flutter.
  FlutterMethodChannel *_channel;

  id<FlutterPluginRegistrar> _registrar;
}

+ (void)registerWithRegistrar:(id<FlutterPluginRegistrar>)registrar {
  FlutterMethodChannel *channel = [FlutterMethodChannel methodChannelWithName:kChannelName
                                                              binaryMessenger:registrar.messenger];
  FLEShowWindowPlugin *instance = [[FLEShowWindowPlugin alloc] initWithChannel:channel 
                                                              registrar:registrar];
  [registrar addMethodCallDelegate:instance channel:channel];
}

- (instancetype)initWithChannel:(FlutterMethodChannel *)channel
                      registrar:(id<FlutterPluginRegistrar>)registrar {
  self = [super init];
  if (self) {
    _channel = channel;
    _registrar = registrar;
  }
  return self;
}

/**
 * Handles platform messages generated by the Flutter framework on the color
 * panel channel.
 */
- (void)handleMethodCall:(FlutterMethodCall *)call result:(FlutterResult)result {
  id methodResult = nil;
  if ([call.method isEqualToString:_kShowWindowMethod]) {
    NSRect frame = NSMakeRect(0, 0, 400, 500);
    NSWindow* window  = [[NSWindow alloc] initWithContentRect:frame
                    styleMask:NSTitledWindowMask
                    backing:NSBackingStoreBuffered
                    defer:true];
    [window setBackgroundColor:[NSColor greenColor]];
    [window makeKeyAndOrderFront:NSApp];
    [window setTitle:@"Mobile Devices"];
    [window setMovable:true];
    [window setMovableByWindowBackground:true];
  } else if ([call.method isEqualToString:_kPrintLog]) {
    NSString *const helloWorld = @"Wellcome to MacOS Method Channel :)";
    
    methodResult = helloWorld;
  } else {
    methodResult = FlutterMethodNotImplemented;
  }
  // If no errors are generated, send an immediate empty success message for handled messages, since
  // the actual color data will be provided in follow-up messages.
  result(methodResult);
}

@end
